import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:provider/provider.dart'; // ← Add this line for Provider

import 'routes/app_routes.dart'; // Route names and route mappings
import 'core/theme/app_theme.dart'; // Custom light/dark theme
import 'firebase_options.dart'; // Firebase options generated by CLI
import 'theme/theme_provider.dart'; // ← Add this import

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Run the main app
  runApp(
    ChangeNotifierProvider(
      create: (_) => ThemeProvider(), // Provide theme state globally
      child: const StudentVerseApp(),
    ),
  );
}

class StudentVerseApp extends StatelessWidget {
  const StudentVerseApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final themeProvider = Provider.of<ThemeProvider>(context); // Access theme

    return MaterialApp(
      title: 'StudentVerse',
      debugShowCheckedModeBanner: false,
      theme: AppTheme.lightTheme, // Defined in app_theme.dart
      darkTheme: AppTheme.darkTheme, // Also from app_theme.dart
      themeMode: themeProvider.themeMode, // Dynamic switching
      initialRoute: AppRoutes.login, // You can change this to splash if needed
      routes: AppRoutes.routes,
    );
  }
}
